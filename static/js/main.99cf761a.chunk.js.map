{"version":3,"sources":["index.js"],"names":["currentSeconds","x","parseFloat","minutes","totalSeconds","minString","Math","floor","parseInt","toString","length","seconds","currentMinutes","secString","checkNumOfDigits","num","stringOfNum","playBeep","document","getElementById","play","pauseBeep","pause","resetBeep","currentTime","Header","props","state","id","this","idName","React","Component","TimeText","class","className","currentText","SessionTypeText","text","TimeDisplay","startMinutes","startSeconds","ChangeLengthDisplay","setTime","Buttons","onClick","globalOnClick","Alarm","src","type","Application","breakTime","breakSeconds","runningBreak","sessionTime","sessionSeconds","runningSession","timerOn","operation","resetOnClick","bind","breakIncrementOnClick","breakDecrementOnClick","sessionIncrementOnClick","sessionDecrementOnClick","startPauseOnClick","timerStart","newTimeInSeconds","newSessionMinutes","newSessionSeconds","setState","newBreakMinutes","newBreakSeconds","timerId","setInterval","clearInterval","number","paused","currentAudio","audioEnded","ended","currentTotal","timeRunning","runningTime","ReactDOM","render"],"mappings":"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","file":"static/js/main.99cf761a.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\n\n//function that converts minutes to seconds\nfunction currentSeconds(x){\n    var minutes = parseFloat(x);\n    var secondsPerMin = 60;\n    return secondsPerMin *= minutes;\n}\n\n//function to find the number of minutes\nfunction minutes(totalSeconds){\n    var secondsPerMin = 60;\n    var minutesFromSeconds = Math.floor(parseInt(totalSeconds) / secondsPerMin);\n\n    var minString = minutesFromSeconds.toString();\n\n    if(minString.length === 1){\n        return \"0\" + minString;\n    }else{\n        return minString;\n    }\n}\n\n\n//function to find the total number of seconds remaining, after the minutes are deduced\nfunction seconds(totalSeconds){\n    var secondsPerMin = 60;\n    var currentMinutes = Math.floor(parseFloat(totalSeconds) / secondsPerMin);\n    var remainder = parseFloat(totalSeconds) - currentMinutes * secondsPerMin;\n\n   var secString = remainder.toString();\n\n    if(secString.length === 1){\n        return '0' + secString;\n    }else{\n        return secString;\n    }\n}\n\n// function to ensure there are two digits in the minutes section while incrementing and decrementing the sessions length.\nfunction checkNumOfDigits(num){\n\n    let stringOfNum = num.toString();\n\n        if(stringOfNum.length === 1){\n            return \"0\" + stringOfNum;\n        }else{\n            return stringOfNum;\n        }\n}\n\nfunction playBeep(){\n    let x = document.getElementById(\"beep\");\n    x.play();\n}\n\nfunction pauseBeep(){\n    let x = document.getElementById(\"beep\");\n    x.pause();\n}\n\nfunction resetBeep(){\n    let x = document.getElementById(\"beep\");\n    x.currentTime = 0;\n}\n\n\nclass Header extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n\n        }\n    }\n    render(){\n        return(\n            <h1 id={this.props.idName}>\n                25 + 5 Timer\n            </h1>\n        )\n    }\n}\n\nclass TimeText extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n\n        }\n    }\n    render(){\n        return(\n            <p id={this.props.idName} \n               class={this.props.className}\n               >\n                {this.props.currentText}\n            </p>\n        )\n    }\n}\n\nclass SessionTypeText extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n\n        }\n    } \n    render(){\n        return(\n            <p id={this.props.idName}\n               class={this.props.className}\n               >\n               {this.props.currentText}\n               {this.props.text}\n            </p>\n        )\n    }   \n}\n\nclass TimeDisplay extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n\n        }\n    }\n    render() {\n        return ( \n          <h1 id={this.props.idName} \n              class={this.props.className}\n              >\n                {this.props.startMinutes + \":\" + this.props.startSeconds}\n          </h1>\n        )\n    }\n}\n\nclass ChangeLengthDisplay extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n\n        }\n    }\n    render(){\n        return(\n            <h2 id={this.props.idName}>\n                {this.props.setTime}\n            </h2>\n        )\n    }\n}\n\nclass Buttons extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n\n        }\n    }\n    render(){\n        return(\n            <button id={this.props.idName}\n                    class={this.props.className} \n                    onClick={this.props.globalOnClick}\n                    >\n                {this.props.text}\n            </button>\n        )\n    }\n}\n\nclass Alarm extends React.Component{\n    constructor(props){\n        super(props);\n\n        this.state = {\n\n        }\n    }\n    render(){\n        return(\n            <audio id={this.props.idName}>\n                <source src=\"https://alarm-sound-effect.s3.us-east-2.amazonaws.com/cuckoo-clock.mp3\" type=\"audio/mp3\"/>\n            </audio>\n        )\n    }\n}\n\nclass Application extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            minutes: \"25\",\n            seconds: \"00\",\n            text: \"Session\",\n \n            breakTime: \"5\",\n            breakSeconds: \" \",\n            runningBreak: false,\n\n            sessionTime: \"25\",\n            sessionSeconds: \"\",\n            runningSession: false,\n            \n            timerOn: false,\n            operation: \"Start\",\n            totalSeconds: \"\"\n        }\n\n        this.resetOnClick = this.resetOnClick.bind(this);\n        this.breakIncrementOnClick = this.breakIncrementOnClick.bind(this);\n        this.breakDecrementOnClick = this.breakDecrementOnClick.bind(this);\n        this.sessionIncrementOnClick = this.sessionIncrementOnClick.bind(this);\n        this.sessionDecrementOnClick = this.sessionDecrementOnClick.bind(this);\n        this.startPauseOnClick = this.startPauseOnClick.bind(this);\n        this.timerStart = this.timerStart.bind(this);   \n    }\n\n    //this function is called every second, see componentDidMount line 290\n    timerStart(){\n       if(this.state.timerOn && this.state.totalSeconds === \"\"){\n\n        let newTimeInSeconds = currentSeconds(this.state.sessionTime) - 1;\n        let newSessionMinutes = minutes(newTimeInSeconds);\n        let newSessionSeconds = seconds(newTimeInSeconds);\n\n            this.setState({\n                minutes: newSessionMinutes,\n                seconds: newSessionSeconds,\n                totalSeconds: newTimeInSeconds -1,\n                runningSession: true,\n                text: \"Session\"\n            })\n\n        }else if(this.state.timerOn && this.state.totalSeconds > -1 && this.state.runningSession){\n\n        let newSessionMinutes = minutes(this.state.totalSeconds);\n        let newSessionSeconds = seconds(this.state.totalSeconds);\n\n            this.setState({\n                minutes: newSessionMinutes,\n                seconds: newSessionSeconds,\n                totalSeconds: this.state.totalSeconds - 1\n            });\n\n       }else if(this.state.timerOn && parseInt(this.state.totalSeconds) < 0 && this.state.runningSession){\n\n        let newTimeInSeconds = currentSeconds(this.state.breakTime);\n        let newBreakMinutes = minutes(newTimeInSeconds);\n        let newBreakSeconds = seconds(newTimeInSeconds);\n\n            this.setState({\n                minutes: newBreakMinutes,\n                seconds: newBreakSeconds,\n                totalSeconds: newTimeInSeconds - 1,\n                runningSession: false,\n                runningBreak: true,\n                text: \"Break\"\n            })\n\n       }else if(this.state.timerOn && parseInt(this.state.totalSeconds) > -1 && this.state.runningBreak){\n\n        let newBreakMinutes = minutes(this.state.totalSeconds);\n        let newBreakSeconds = seconds(this.state.totalSeconds);\n\n            this.setState({\n                minutes: newBreakMinutes,\n                seconds: newBreakSeconds,\n                totalSeconds: this.state.totalSeconds - 1,\n                runningBreak: true \n            })   \n\n        }else if(this.state.timerOn && parseInt(this.state.totalSeconds) < 0 && this.state.runningBreak){\n\n           let newTimeInSeconds = currentSeconds(this.state.sessionTime);\n           let newSessionSeconds = seconds(newTimeInSeconds);\n           let newSessionMinutes = minutes(newTimeInSeconds);\n           \n            this.setState({\n                minutes: newSessionMinutes,\n                seconds: newSessionSeconds,\n                totalSeconds: newTimeInSeconds -1,\n                runningBreak: false,\n                runningSession: true,\n                text: \"Session\"\n            })\n\n        }else{\n\n            this.setState({\n                minutes: this.state.minutes,\n                seconds: this.state.seconds,\n                totalSeconds: this.state.totalSeconds\n            })\n        } \n    }\n\n    componentDidMount(){\n        this.timerId = setInterval(this.timerStart, 1000);\n    }\n\n    componentWillUnmount(){\n        clearInterval(this.timerId);\n    }\n\n    resetOnClick(){\n        this.setState({\n            minutes: \"25\",\n            seconds: \"00\",\n            text: \"Session\",\n \n            breakTime: \"5\",\n            breakSeconds:\"\",\n\n            sessionTime: \"25\",\n            sessionSeconds: \"\",\n\n            timerOn: false,\n            operation: \"Start\",\n            totalSeconds: \"\"\n        });\n        pauseBeep();\n        resetBeep();\n    }\n\n    breakIncrementOnClick(){\n        let number = parseFloat(this.state.breakTime);\n\n        if(number < 60){\n            this.setState({\n                breakTime: number + 1\n            }) \n        }else{\n            this.setState({\n                breakTime: this.state.breakTime\n            })\n        }  \n    }\n    \n    breakDecrementOnClick(){\n        let number = parseFloat(this.state.breakTime);\n\n        if(number > 2){\n            this.setState({\n                breakTime: number - 1\n            })\n        }else{\n            this.setState({\n                breakTime: 1\n            })\n        }\n    }\n\n    sessionIncrementOnClick(){\n        let number = parseFloat(this.state.sessionTime);\n\n        if(number < 60){\n            this.setState({\n                minutes: checkNumOfDigits(number + 1),\n                sessionTime: number + 1\n            });\n        }else{\n            this.setState({\n                sessionTime: this.state.sessionTime\n            });\n        }\n    }\n\n    sessionDecrementOnClick(){\n        let number = parseFloat(this.state.sessionTime);\n\n        if(number > 1){\n            this.setState({\n                minutes: checkNumOfDigits(number - 1),\n                sessionTime: number - 1\n            });\n        }else{\n            this.setState({\n                sessionTime: 1\n            })\n        }\n    }\n\n    startPauseOnClick(){ \n        let paused = document.getElementById(\"beep\").paused;\n        let currentAudio = document.getElementById(\"beep\").currentTime;\n        let audioEnded = document.getElementById(\"beep\").ended;\n\n         if(this.state.timerOn){\n\n            this.setState({\n                timerOn: false,\n                operation: \"Start\"   \n            });\n            pauseBeep();\n        }else if(paused === true && audioEnded === false && currentAudio > 0){\n            this.setState({\n                timerOn: true,\n                operation: \"Pause\"\n            });\n            playBeep();\n        }else{\n            this.setState({\n                timerOn: true, \n                operation: \"Pause\"\n            })\n            resetBeep();\n        }\n    }\n\n    render(){\n        let currentTotal = this.state.totalSeconds;\n        let timeRunning = this.state.timerOn;\n       \n        function playSound(){\n            if(currentTotal === -1 && timeRunning){\n                playBeep();\n        }\n    }\n            playSound();\n\n        return(\n        <div>\n            <Alarm idName=\"beep\" />\n\n            <Header idName=\"header\" />\n\n        <div id=\"container\">\n\n          <div id=\"top-time\">\n            <TimeText \n                idName=\"timer-label\"\n                currentText={this.state.text} />\n            <TimeDisplay \n                idName=\"time-left\" \n                startMinutes={this.state.minutes}\n                startSeconds={this.state.seconds}\n                currentTime={this.state.runningTime} />\n\n            <Buttons \n                idName=\"start_stop\"\n                className=\"time\" \n                text={this.state.operation}\n                globalOnClick={this.startPauseOnClick} />\n            <Buttons \n                idName=\"reset\"\n                className=\"time\" \n                globalOnClick={this.resetOnClick} text=\"Reset\" />\n          </div>\n\n          <div id=\"break-content\">\n           \n            <SessionTypeText \n                idName=\"break-label\" \n                text=\"Break Length\" />\n            <ChangeLengthDisplay \n                idName=\"break-length\" \n                setTime={this.state.breakTime} />\n            <Buttons \n                idName=\"break-increment\" \n                className=\"change-time\"\n                text=\"+\" \n                globalOnClick={this.breakIncrementOnClick} />\n            <Buttons \n                idName=\"break-decrement\"\n                className=\"change-time\" \n                text=\"-\" \n                globalOnClick={this.breakDecrementOnClick} \n                currentTime={this.state.breakTime} />\n          </div>\n\n          <div id=\"session-content\">\n            <SessionTypeText \n                idName=\"session-label\"\n                text=\"Session Length\" /> \n            <ChangeLengthDisplay \n                idName=\"session-length\" \n                setTime={this.state.sessionTime} />\n            <Buttons \n                idName=\"session-increment\" \n                className=\"change-time\" \n                text=\"+\" \n                globalOnClick={this.sessionIncrementOnClick} />\n            <Buttons \n                idName=\"session-decrement\"\n                className=\"change-time\"  \n                text=\"-\" \n                globalOnClick={this.sessionDecrementOnClick} />\n          </div>\n        </div>   \n        </div>\n        )\n    }\n    }\nReactDOM.render( \n    <Application / > ,\n    document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}